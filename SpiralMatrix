//Question Link - https://leetcode.com/problems/spiral-matrix/



class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int> array;
        int top = 0, bottom = matrix.size() - 1;
        int left = 0, right = matrix[0].size() - 1;
        
        while (1){
            
//             else if (bottom < top)
//                 break;
            
            //print top row
        for (int i=left; i<=right; i++){
            array.push_back(matrix[top][i]);
        }
        top++;
            if (top > bottom)
                break;
        
        //print right column
         for (int j=top; j<=bottom; j++){
            array.push_back(matrix[j][right]);
        }
        right--;
        if (right <left )
                break;
        //print bottom row
         for (int i=right; i>=left; i--){
            array.push_back(matrix[bottom][i]);
        }
        bottom--;
            if (bottom < top)
                break;
        
        //print left column
         for (int j=bottom; j>=top; j--){
            array.push_back(matrix[j][left]);
        }
        left++;
            if (left > right)
                break;
        
        }
        
        return array;
    }  
};
